<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.invillia.acme</groupId>
	<artifactId>backend-challenge-payment</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>backend-challenge-payment</name>
	<description>Microservice resposible for managing operations relato to Payments</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<org.jooq.version>3.11.7</org.jooq.version>
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
	</properties>

	<dependencies>
        <dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		 
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>properties-maven-plugin</artifactId>
			    <version>1.0.0</version>
			    <executions>
			        <execution>
			            <phase>initialize</phase>
			            <goals>
			                <goal>read-project-properties</goal>
			            </goals>
			            <configuration>
			                <files>
			                    <file>src/main/resources/jooq.properties</file>
			                </files>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
			<plugin>
			    <groupId>org.jooq</groupId>
			    <artifactId>jooq-codegen-maven</artifactId>
			    <version>${org.jooq.version}</version>
			    <executions>
			        <execution>
			            <phase>generate-sources</phase>
			            <goals>
			                <goal>generate</goal>
			            </goals>
			            <configuration>
			                <jdbc>
			                    <driver>${db.driver}</driver>
			                    <url>${db.url}</url>
			                    <user>${db.username}</user>
			                    <password>${db.password}</password>
			                </jdbc>
			                <generator>
			                    <target>
			                        <packageName>com.invillia.acme.jooq</packageName>
			                        <directory>src/main/java</directory>
			                    </target>
			                    <database>
			                    	<inputSchema>
			                    		${db.schema}
			                    	</inputSchema>
									<includes>
			                    		${db.tables}
			                    	</includes>
			                    </database>
			                </generator>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
	</build>
</project>
