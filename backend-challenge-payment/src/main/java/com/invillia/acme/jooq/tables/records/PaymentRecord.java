/*
 * This file is generated by jOOQ.
 */
package com.invillia.acme.jooq.tables.records;


import com.invillia.acme.jooq.tables.Payment;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentRecord extends UpdatableRecordImpl<PaymentRecord> implements Record4<Integer, String, Integer, Timestamp> {

    private static final long serialVersionUID = -1089323347;

    /**
     * Setter for <code>acme.payment.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>acme.payment.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>acme.payment.credit_card</code>.
     */
    public void setCreditCard(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>acme.payment.credit_card</code>.
     */
    public String getCreditCard() {
        return (String) get(1);
    }

    /**
     * Setter for <code>acme.payment.id_payment_status</code>.
     */
    public void setIdPaymentStatus(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>acme.payment.id_payment_status</code>.
     */
    public Integer getIdPaymentStatus() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>acme.payment.payment_date</code>.
     */
    public void setPaymentDate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>acme.payment.payment_date</code>.
     */
    public Timestamp getPaymentDate() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Payment.PAYMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Payment.PAYMENT.CREDIT_CARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Payment.PAYMENT.ID_PAYMENT_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Payment.PAYMENT.PAYMENT_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCreditCard();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getIdPaymentStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getPaymentDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCreditCard();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getIdPaymentStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getPaymentDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value2(String value) {
        setCreditCard(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value3(Integer value) {
        setIdPaymentStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value4(Timestamp value) {
        setPaymentDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord values(Integer value1, String value2, Integer value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentRecord
     */
    public PaymentRecord() {
        super(Payment.PAYMENT);
    }

    /**
     * Create a detached, initialised PaymentRecord
     */
    public PaymentRecord(Integer id, String creditCard, Integer idPaymentStatus, Timestamp paymentDate) {
        super(Payment.PAYMENT);

        set(0, id);
        set(1, creditCard);
        set(2, idPaymentStatus);
        set(3, paymentDate);
    }
}
