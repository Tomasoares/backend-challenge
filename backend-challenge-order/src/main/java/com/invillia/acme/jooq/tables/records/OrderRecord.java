/*
 * This file is generated by jOOQ.
 */
package com.invillia.acme.jooq.tables.records;


import com.invillia.acme.jooq.tables.Order;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderRecord extends UpdatableRecordImpl<OrderRecord> implements Record5<Integer, String, Integer, Integer, Date> {

    private static final long serialVersionUID = 168292182;

    /**
     * Setter for <code>acme.order.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>acme.order.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>acme.order.address</code>.
     */
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>acme.order.address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>acme.order.id_order_status</code>.
     */
    public void setIdOrderStatus(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>acme.order.id_order_status</code>.
     */
    public Integer getIdOrderStatus() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>acme.order.id_store</code>.
     */
    public void setIdStore(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>acme.order.id_store</code>.
     */
    public Integer getIdStore() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>acme.order.confirmation_date</code>.
     */
    public void setConfirmationDate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>acme.order.confirmation_date</code>.
     */
    public Date getConfirmationDate() {
        return (Date) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Date> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Date> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Order.ORDER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Order.ORDER.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Order.ORDER.ID_ORDER_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Order.ORDER.ID_STORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Order.ORDER.CONFIRMATION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getIdOrderStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getIdStore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component5() {
        return getConfirmationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getIdOrderStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getIdStore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getConfirmationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value2(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value3(Integer value) {
        setIdOrderStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value4(Integer value) {
        setIdStore(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value5(Date value) {
        setConfirmationDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord values(Integer value1, String value2, Integer value3, Integer value4, Date value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderRecord
     */
    public OrderRecord() {
        super(Order.ORDER);
    }

    /**
     * Create a detached, initialised OrderRecord
     */
    public OrderRecord(Integer id, String address, Integer idOrderStatus, Integer idStore, Date confirmationDate) {
        super(Order.ORDER);

        set(0, id);
        set(1, address);
        set(2, idOrderStatus);
        set(3, idStore);
        set(4, confirmationDate);
    }
}
